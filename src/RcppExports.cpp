// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_knn_search
void C_knn_search(int& k_in, int& l_in, int& ntrain, int& dim, NumericMatrix& train, IntegerVector& cls, NumericMatrix& test, IntegerVector& res, NumericVector& pr, int& ncls, int& use_all, int begin, int end);
RcppExport SEXP _kNN_C_knn_search(SEXP k_inSEXP, SEXP l_inSEXP, SEXP ntrainSEXP, SEXP dimSEXP, SEXP trainSEXP, SEXP clsSEXP, SEXP testSEXP, SEXP resSEXP, SEXP prSEXP, SEXP nclsSEXP, SEXP use_allSEXP, SEXP beginSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int& >::type k_in(k_inSEXP);
    Rcpp::traits::input_parameter< int& >::type l_in(l_inSEXP);
    Rcpp::traits::input_parameter< int& >::type ntrain(ntrainSEXP);
    Rcpp::traits::input_parameter< int& >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type train(trainSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type cls(clsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type test(testSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type res(resSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type pr(prSEXP);
    Rcpp::traits::input_parameter< int& >::type ncls(nclsSEXP);
    Rcpp::traits::input_parameter< int& >::type use_all(use_allSEXP);
    Rcpp::traits::input_parameter< int >::type begin(beginSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    C_knn_search(k_in, l_in, ntrain, dim, train, cls, test, res, pr, ncls, use_all, begin, end);
    return R_NilValue;
END_RCPP
}
// C_kNN_multi_thread
List C_kNN_multi_thread(int& k_in, int& l_in, int& ntrain, int& dim, NumericMatrix& train, IntegerVector& cls, NumericMatrix& test, int& ncls, int& use_all);
RcppExport SEXP _kNN_C_kNN_multi_thread(SEXP k_inSEXP, SEXP l_inSEXP, SEXP ntrainSEXP, SEXP dimSEXP, SEXP trainSEXP, SEXP clsSEXP, SEXP testSEXP, SEXP nclsSEXP, SEXP use_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int& >::type k_in(k_inSEXP);
    Rcpp::traits::input_parameter< int& >::type l_in(l_inSEXP);
    Rcpp::traits::input_parameter< int& >::type ntrain(ntrainSEXP);
    Rcpp::traits::input_parameter< int& >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type train(trainSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type cls(clsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type test(testSEXP);
    Rcpp::traits::input_parameter< int& >::type ncls(nclsSEXP);
    Rcpp::traits::input_parameter< int& >::type use_all(use_allSEXP);
    rcpp_result_gen = Rcpp::wrap(C_kNN_multi_thread(k_in, l_in, ntrain, dim, train, cls, test, ncls, use_all));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kNN_C_knn_search", (DL_FUNC) &_kNN_C_knn_search, 13},
    {"_kNN_C_kNN_multi_thread", (DL_FUNC) &_kNN_C_kNN_multi_thread, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_kNN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
